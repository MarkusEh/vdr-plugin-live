<%pre>

#include <exception.h>
#include <tasks.h>
#include <tools.h>
#include <users.h>

using namespace vdrlive;

</%pre>
<%args>
  int channel_number;
  std::string param;
  std::string async;
</%args>
<%cpp>
  tChannelID channelID;
  if (qparam.has("channel_number")) {
    LOCK_CHANNELS_READ;
    const cChannel* channel = Channels->GetByNumber(channel_number);
    channelID = channel ? channel->GetChannelID() : tChannelID::InvalidID;
  } else
    channelID = tChannelID::FromString(param.c_str());

  bool ajaxReq = !async.empty() && (parse_int<int>(async) != 0);
  std::string referrer;

  if (!cUser::CurrentUserHasRightTo(UR_SWITCHCHNL))
    throw HtmlError( tr("Sorry, no permission. Please contact your administrator!") );

  if (ajaxReq) {
    reply.setContentType( "application/xml" );
  }
  else {
    referrer = request.getHeader("Referer:");
  }

  SwitchChannelTask task( channelID );
  LiveTaskManager().Execute( task );

  if (!ajaxReq) {
    if (!referrer.empty()) {
      return reply.redirect(referrer);
    }
</%cpp>
Normale Seite:<br/>
channel: <$ channelID $><br/>
result: <$ (task.Result()) $><br/>
error: <$ (task.Error()) $><br />
Seitenende!
<%cpp>
  }
  else {
</%cpp>
<& xmlresponse.ajax name=("switch_channel") pname=("channel") value=(channelID) result=(task.Result()) error=(task.Error()) &>
<%cpp>
  }
</%cpp>
