<%pre>

#include <exception.h>
#include <tasks.h>
#include <tools.h>
#include <users.h>
#include <recman.h>

using namespace vdrlive;

</%pre>
<%args>
	std::string param;
	std::string async;
</%args>
<%cpp>
  RecordingsManagerPtr recordings = LiveRecordingsManager();
  const cRecording *recording = recordings->GetByMd5Hash(param);
  if (recording == nullptr) {
    esyslog("live: ERROR in delete_recording.ecpp, no recording with id %s found", param.c_str() );
    throw HtmlError(tr("Couldn't find recording or no recordings available"));
  }

  if (!cUser::CurrentUserHasRightTo(UR_DELRECS)) {
    esyslog("live: WARNING in delete_recording.ecpp, no permission to delete recording %s", recording->Name() );
    throw HtmlError( tr("Sorry, no permission. Please contact your administrator!") );
  }

	bool ajaxReq = !async.empty() && (parse_int<int>(async) != 0);
	std::string referrer;

	if (ajaxReq) {
		reply.setContentType( "application/xml" );
	}
	else {
		referrer = request.getHeader("Referer:");
	}

  RemoveRecordingTask task(param);
  LiveTaskManager().Execute(task);
  const char *result;
  if (task.Result()) {
    isyslog("live: INFO in delete_recording.ecpp, deleted recording with id %s name %s", param.c_str(), recording->Name() );
    result = "success";
  } else {
    esyslog("live: ERROR in delete_recording.ecpp, cannot delete recording with id %s name %s error %s", param.c_str(), recording->Name(), task.Error().c_str() );
    result = "error";
  }

	if (!ajaxReq) {
		if (!referrer.empty()) {
			return reply.redirect(referrer);
		}
</%cpp>
Normale Seite:<br/>
recording: <$ recording->Name()  $><br/>
result: <$ result $><br/>
error: <$ (task.Error()) $><br />
Seitenende!
<%cpp>
	}
	else {
</%cpp>
<& xmlresponse.ajax name=("delete_recording") pname=("recording") value=(recording->Name()) result=(task.Result()) error=(task.Error()) &>
<%cpp>
	}
</%cpp>
