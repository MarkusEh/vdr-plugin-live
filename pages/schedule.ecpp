<%pre>

#include <livefeatures.h>
#include <setup.h>
#include <tools.h>
#include <epg_events.h>
#include <timers.h>
#include <recman.h>


#include <vdr/config.h>


using namespace vdrlive;



</%pre>
<%args>
	int channel = -1;
</%args>
<%session scope="global">
bool logged_in(false);
</%session>

<# scope="page" should be enough but does not work with tntnet 3.0 #>
<%request scope="global">
	cChannel* Channel;
</%request>
<%include>page_init.eh</%include>
<%cpp>
if (!logged_in && LiveSetup().UseAuth()) return reply.redirect("login.html");
</%cpp>
<%cpp>
	pageTitle = trVDR("Schedule");

bool display_pictures = !(LiveSetup().GetTvscraperImageDir().empty());

#if VDRVERSNUM < 20301
	cSchedulesLock schedulesLock;
	cSchedules const* schedules = cSchedules::Schedules( schedulesLock );

	ReadLock channelsLock( Channels );
	if ( !channelsLock )
		throw HtmlError( tr("Couldn't aquire access to channels, please try again later.") );
#endif

	// cChannel* Channel; (see %request above)
	if ( channel > 0 ) {
#if VDRVERSNUM >= 20301
		LOCK_CHANNELS_READ;
		Channel = (cChannel *)Channels->GetByNumber( channel );
#else
		Channel = Channels.GetByNumber( channel );
#endif
	}
	else {
#if VDRVERSNUM >= 20301
		LOCK_CHANNELS_READ;
#endif
		if (cDevice::CurrentChannel()) {
#if VDRVERSNUM >= 20301
			Channel = (cChannel *)Channels->GetByNumber(cDevice::CurrentChannel());
#else
			Channel = Channels.GetByNumber(cDevice::CurrentChannel());
#endif
		}
		else {
#if VDRVERSNUM >= 20301
			Channel = (cChannel *)Channels->Get( Channels->GetNextNormal( -1 ) );
#else
			Channel = Channels.Get( Channels.GetNextNormal( -1 ) );
#endif
		}
	}
	if ( Channel == 0 )
		throw HtmlError( tr("Couldn't find channel or no channels available. Maybe you mistyped your request?") );

	cSchedule const* Schedule;
#if VDRVERSNUM >= 20301
	{
		LOCK_SCHEDULES_READ;
		Schedule = Schedules->GetSchedule( (const cChannel *)Channel );
	}
#else
	Schedule = schedules->GetSchedule( Channel );
#endif
</%cpp>
<& pageelems.doc_type &>
<html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<title>VDR Live - <$ pageTitle $></title>
		<& pageelems.stylesheets &>
		<& pageelems.ajax_js &>
		<script type="text/javascript" src="js/live/createHtml.js"></script>
		<& pageelems.create_html_js &>
	</head>
	<body onload="adjustHeader()" onresize="adjustHeader()">
		<& pageelems.logo &>
		<& menu active=("schedule") component=("schedule.channel_selection") &>
		<div class="inhalt">
<%cpp>
	if ( Schedule == 0 ) {
</%cpp>
			<$ tr("No schedules available for this channel") $>.
<%cpp>
	}
	else {
</%cpp>
		<table class="listing" cellspacing="0" cellpadding="0">
<%cpp>
		std::string current_day = "";
		const cEvent* PresentEvent = Schedule->GetPresentEvent();
		time_t now = time(NULL) - ::Setup.EPGLinger * 60;
                RecordingsItemPtr recItem;
                bool recItemFound;
    cLargeString epg_item("epg_item", 1000);
#if VDRVERSNUM >= 20301
		for (const cEvent *Event = (cEvent *)Schedule->Events()->First(); Event; Event = (cEvent *)Schedule->Events()->Next(Event)) {
#else
		for (const cEvent *Event = Schedule->Events()->First(); Event; Event = Schedule->Events()->Next(Event)) {
#endif
			if (Event->EndTime() <= now && Event != PresentEvent) continue;

			epg_item.clear();
			recItemFound = appendEpgItem(epg_item, recItem, Event, Channel, false);
			EpgInfoPtr epgEvent = EpgEvents::CreateEpgInfo(Channel, Event);
			std::string day(epgEvent->StartTime(tr("%A, %b %d %Y")));

			bool lastEventCurrentDay = false;
			{
#if VDRVERSNUM >= 20301
				cEvent* NextEvent = (cEvent *)Schedule->Events()->Next(Event);
#else
				cEvent* NextEvent = Schedule->Events()->Next(Event);
#endif
				if (!NextEvent) {
					lastEventCurrentDay = true;
				}
				else {
					std::string nday(NextEvent->StartTime() ? FormatDateTime(tr("%A, %b %d %Y"), NextEvent->StartTime()) : "");
					lastEventCurrentDay = (day != nday);
				}
			}

			int col_span = 3;
			if (display_pictures) col_span++;
			if (current_day != day) {
				if (current_day != "") {
</%cpp>
				<tr class="spacer">
					<td colspan="<$col_span$>"/>
				</tr>
<%cpp>
				}
</%cpp>
				<tr class="head">
					<td colspan=<$col_span$>><div class="boxheader"><div><div><$ day $></div></div></div></td>
				</tr>
<%cpp>
				current_day = day;
			}
</%cpp>
<script>
  document.write(eventString(<$(lastEventCurrentDay && !recItemFound)?"1":"0"$>, <$$ epg_item.c_str() $>))
</script>
<%cpp>
if(recItemFound) {
  epg_item.clear();
  recItem->AppendAsJSArray(epg_item, true);
</%cpp>
  <script>
    document.write(existingRecordingString(<$col_span - 2$>, \"<? lastEventCurrentDay ? "bottomrow" ?>\", <$$epg_item.c_str()$>))
  </script>
<%cpp> }  // if rec item found
		}  // loop over all events
</%cpp>
			</table>
<%cpp>
	}
</%cpp>
		</div>
	</body>
<script>imgLoad()</script>
</html>
<%include>page_exit.eh</%include>

<%def channel_selection>
<form action="schedule.html" method="get" id="channels">
   <span>
     <label for="channel"><$ tr("Channel") $>:&nbsp;<span class="bold"><$ std::to_string(Channel->Number()) $></span></label>
     <& channels_widget name=("channel") selected=(Channel ? *Channel->GetChannelID().ToString() : "") onchange=("document.forms.channels.submit()") &>
     <& pageelems.ajax_action_href action="switch_channel" tip=(tr("Switch to this channel.")) param=(Channel->GetChannelID()) image="zap.png" alt="" &>
     <& pageelems.hls_channel channelId=(Channel->GetChannelID()) &>
     <& pageelems.m3u_playlist_channel channelId=(Channel->GetChannelID()) &>
   </span>
</form>
<span class="sep">|</span>
<a href="schedule.html?channel=<$ std::max(0, ((int)Channel->Number() - 1)) $>">« Prev</a>
<span class="sep">|</span>
<a href="schedule.html?channel=<$ (Channel->Number() + 1) $>">Next »</a>
</%def>
